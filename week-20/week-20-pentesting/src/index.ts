import express from "express";
import rateLimit from "express-rate-limit";

const app = express();
app.use(express.json());

const otpLimiter = rateLimit({
  windowMs:10*30*1000,
  max:3,
  message:"Too many requets, Please try again after 10 mins",
  standardHeaders:true,
  legacyHeaders:false
})
const generateOtp = rateLimit({
  windowMs:5*30*1000,
  max:3,
  message:"Too many requets, Please try again after 5 mins",
  standardHeaders:true,
  legacyHeaders:false
})

// app.use(otpLimiter)

const OtpRecord: Record<string, string> = {};

app.post("/generate-otp",generateOtp, (req: any, res: any) => {
  const email = req.body.email;
  if (!email) {
    return res.status(411).json({ message: "Email is required" });
  }

  const otp = Math.floor(100000 + Math.random() * 900000).toString();

  console.log(`Otp for ${email} is ${otp}`);
  OtpRecord[email] = otp;
  res.status(200).json({ message: "OTP generated" });
});

app.post("/rest-password",otpLimiter, (req, res) => {
  const otp = req.body.otp;
  const email = req.body.email;
  
  if (!otp || !email) {
    res.status(411).json({
      Msg: "OTP and Email req",
    });
  }
  if (OtpRecord[email] === otp) {
    console.log("Otp matched Password reset done");
    res.status(200).json({
      msg: "Password reset done",
    });
  } else {
    res.status(590).json({ Error: "invalid otp" });
  }
});

const PORT = 3000;


app.listen(PORT, () => {
  console.log("Server is running on port " + PORT);
});