import express from "express";
import rateLimit from "express-rate-limit";
import cors from "cors";




const SECRET_KEY = process.env.SECRET_KEY??"";

const app = express();
app.use(cors())
app.use(express.json());

const otpLimiter = rateLimit({
  windowMs:10*30*1000,
  max:3,
  message:"Too many requets, Please try again after 10 mins",
  standardHeaders:true,
  legacyHeaders:false
})
const generateOtp = rateLimit({
  windowMs:5*30*1000,
  max:3,
  message:"Too many requets, Please try again after 5 mins",
  standardHeaders:true,
  legacyHeaders:false
})

// app.use(otpLimiter)

const OtpRecord: Record<string, string> = {};

app.post("/generate-otp",generateOtp, (req: any, res: any) => {
  const email = req.body.email;
  if (!email) {
    return res.status(411).json({ message: "Email is required" });
  }

  const otp = Math.floor(100000 + Math.random() * 900000).toString();

  console.log(`Otp for ${email} is ${otp}`);
  OtpRecord[email] = otp;
  res.status(200).json({ message: "OTP generated" });
});

app.post("/reset-password",otpLimiter, async(req:any, res:any) => {
  const { email, otp, newPassword, token } = req.body;
  console.log("email ",email);
  console.log("Otp ",otp);
// console.log(email,token);
  let formData = new FormData();
	formData.append('secret', SECRET_KEY);
	formData.append('response', token);
  // console.log(token);
  // console.log( "key",SECRET_KEY);

  const url = 'https://challenges.cloudflare.com/turnstile/v0/siteverify';
	const result = await fetch(url, {
		body: formData,
		method: 'POST',
	});
  // console.log(await result.json());
  const challengeSucceeded = (await result.json()).success;

  if (!challengeSucceeded) {
    return res.status(403).json({ message: "Invalid reCAPTCHA token" });
  }


  if (!otp || !email) {
    res.status(411).json({
      Msg: "OTP and Email req",
    });
  }
  else if (OtpRecord[email] === otp) {
    console.log("Otp matched Password reset done");
    res.status(200).json({
      msg: "Password reset done",
    });
  } else {
    res.status(403).json({ Error: "invalid otp" });
  }
});

const PORT = 3000;


app.listen(PORT, () => {
  console.log("Server is running on port " + PORT);
});